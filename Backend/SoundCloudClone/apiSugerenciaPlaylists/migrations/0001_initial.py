# Generated by Django 5.2.4 on 2025-07-10 20:49

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriasPlaylist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('color_hex', models.CharField(default='#000000', max_length=7)),
                ('icono', models.CharField(blank=True, max_length=50, null=True)),
                ('es_genero_musical', models.BooleanField(default=False)),
                ('es_estado_animo', models.BooleanField(default=False)),
                ('es_actividad', models.BooleanField(default=False)),
                ('activa', models.BooleanField(default=True)),
                ('orden_display', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'categorias_playlist',
                'ordering': ['orden_display', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='PlaylistTendencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playlist_id', models.IntegerField(unique=True)),
                ('titulo', models.CharField(max_length=255)),
                ('usuario_creador_id', models.IntegerField()),
                ('reproducciones_ultima_semana', models.IntegerField(default=0)),
                ('nuevos_seguidores', models.IntegerField(default=0)),
                ('puntuacion_tendencia', models.FloatField(default=0.0)),
                ('categoria', models.CharField(choices=[('nueva', 'Nueva y Popular'), ('viral', 'Viral'), ('genero', 'Popular en Género'), ('region', 'Popular en Región'), ('editorial', 'Selección Editorial')], max_length=50)),
                ('activa_en_tendencias', models.BooleanField(default=True)),
                ('fecha_ingreso_tendencia', models.DateTimeField(auto_now_add=True)),
                ('ultima_actualizacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'playlist_tendencias',
                'ordering': ['-puntuacion_tendencia', '-fecha_ingreso_tendencia'],
            },
        ),
        migrations.CreateModel(
            name='RecomendacionPlaylist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usuario_id', models.IntegerField()),
                ('playlist_recomendada_id', models.IntegerField()),
                ('razon_recomendacion', models.CharField(choices=[('gustos_similares', 'Basado en tus gustos'), ('artista_seguido', 'Contiene artistas que sigues'), ('genero_favorito', 'De tu género favorito'), ('amigos', 'Popular entre tus amigos'), ('tendencia', 'En tendencia'), ('nueva', 'Nueva de artista que sigues')], max_length=100)),
                ('puntuacion_recomendacion', models.FloatField()),
                ('mostrada_al_usuario', models.BooleanField(default=False)),
                ('interaccion_usuario', models.CharField(blank=True, choices=[('vista', 'Vista'), ('reproducida', 'Reproducida'), ('seguida', 'Seguida'), ('ignorada', 'Ignorada')], max_length=20, null=True)),
                ('fecha_recomendacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_interaccion', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'recomendaciones_playlists',
                'ordering': ['-puntuacion_recomendacion', '-fecha_recomendacion'],
                'unique_together': {('usuario_id', 'playlist_recomendada_id')},
            },
        ),
        migrations.CreateModel(
            name='SimilitudPlaylists',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playlist_a_id', models.IntegerField()),
                ('playlist_b_id', models.IntegerField()),
                ('similitud_contenido', models.FloatField(default=0.0)),
                ('similitud_usuarios', models.FloatField(default=0.0)),
                ('similitud_total', models.FloatField(default=0.0)),
                ('canciones_comunes', models.IntegerField(default=0)),
                ('usuarios_comunes', models.IntegerField(default=0)),
                ('calculada_en', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'similitud_playlists',
                'ordering': ['-similitud_total'],
                'unique_together': {('playlist_a_id', 'playlist_b_id')},
            },
        ),
        migrations.CreateModel(
            name='PlaylistCategoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playlist_id', models.IntegerField()),
                ('relevancia', models.FloatField(default=1.0)),
                ('asignada_automaticamente', models.BooleanField(default=False)),
                ('asignada_en', models.DateTimeField(auto_now_add=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apiSugerenciaPlaylists.categoriasplaylist')),
            ],
            options={
                'db_table': 'playlist_categorias',
                'unique_together': {('playlist_id', 'categoria')},
            },
        ),
    ]
